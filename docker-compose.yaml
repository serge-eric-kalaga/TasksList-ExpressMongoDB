# version: '3'

services:
  express_api:
    container_name: express_api
    build: ./app
    volumes:
      - ./app:/app/
    expose:
      - 5000
    ports:
      - "5000:5000"
    env_file:
      - ./app/.env
    depends_on:
      - mongo_db
    networks:
      - asgard
      - monitoring

  mongo_db:
    container_name: mongo_db
    image: mongo
    restart: always
    expose:
      - 27017
    env_file:
      - ./app/.env 
    volumes:
      - ./data/mongo:/data/db 
      - ./data/init/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - asgard 

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:5000
    env_file:
      - ./app/.env
    depends_on:
      - mongo_db
    networks:
      - asgard



  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "6060:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    ports:
      - "7070:3000"
    env_file:
      - ./app/.env
    networks:
      - monitoring

  signoz-otel-collector:
    image: signoz/signoz-otel-collector
    ports:
      - "4317:4317" # gRPC port
      - "55681:55681" # HTTP port
    networks:
      - monitoring

  signoz-frontend:
    image: signoz/frontend
    ports:
      - "3301:3301"
    networks:
      - monitoring

  signoz-query-service:
    image: signoz/query-service
    networks:
      - monitoring




networks:
  asgard:
  monitoring:
    driver: bridge